✅ Objective
Enable Allure Reporting for a Cucumber BDD project using:

Java
Maven
Cucumber
TestNG or JUnit (you can choose either, I’ll mention both)

Allure for advanced HTML reporting with step-by-step details

🔧 Step-by-Step Setup: Allure with Cucumber + Maven + Java
🔹 1. Create a Maven Project Structure
bash
Copy
Edit
src
└── test
    ├── java
    │   └── steps
    │       └── LoginSteps.java
    │   └── runners
    │       └── TestRunner.java
    └── resources
        └── features
            └── login.feature
🔹 2. Add Dependencies to pom.xml

<dependencies>
    <!-- Cucumber -->
    <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>7.11.2</version>
    </dependency>

    <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>7.11.2</version>
    </dependency>

    <!-- Allure Cucumber Integration -->
    <dependency>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-cucumber7-jvm</artifactId>
        <version>2.21.0</version>
    </dependency>

    <!-- JUnit -->
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
        <scope>test</scope>
    </dependency>
</dependencies>

<build>
    <plugins>
        <!-- Allure Maven Plugin -->
        <plugin>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-maven</artifactId>
            <version>2.11.2</version>
        </plugin>
    </plugins>
</build>
🔹 3. Sample Feature File — login.feature

Feature: Login Feature

  Scenario: Successful login
    Given user navigates to login page
    When user enters valid username and password
    Then user is redirected to dashboard
🔹 4. Step Definitions — LoginSteps.java

package steps;

import io.cucumber.java.en.*;
import io.qameta.allure.Step;

public class LoginSteps {

    @Given("user navigates to login page")
    @Step("Navigate to Login Page")
    public void navigateToLoginPage() {
        System.out.println("Navigating to login page...");
    }

    @When("user enters valid username and password")
    @Step("Enter valid username and password")
    public void enterCredentials() {
        System.out.println("Entering credentials...");
    }

    @Then("user is redirected to dashboard")
    @Step("Verify dashboard redirection")
    public void verifyDashboard() {
        System.out.println("Redirected to dashboard...");
    }
}
🔹 5. Test Runner — TestRunner.java

package runners;

import org.junit.runner.RunWith;
import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;

@RunWith(Cucumber.class)
@CucumberOptions(
    features = "src/test/resources/features",
    glue = "steps",
    plugin = {
        "pretty",
        "io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm"
    },
    monochrome = true
)
public class TestRunner {}
▶️ How to Run and Generate Allure Report
🧪 Step 1: Run the Tests

mvn clean test
This will generate Allure raw report files in target/allure-results/.

🧾 Step 2: Serve Allure Report Locally
Install Allure commandline tool (only once):


# Mac
brew install allure

# Windows (use Scoop or Chocolatey)
choco install allure
Then generate and open the report:


allure serve target/allure-results
This will open a rich HTML report in the browser.

📊 What You Get in Allure Report
Feature → Scenario → Step structure

Timeline, History, Graphs
Attachments (screenshots, logs, etc.)
Failed step highlights
Trend & flaky test detection

🧩 (Optional) Add Screenshots to Allure Report
Add a screenshot attachment in your step definition:

@Attachment(value = "Screenshot", type = "image/png")
public byte[] saveScreenshot(byte[] screenShot) {
    return screenShot;
}
If you're using Selenium + WebDriver, you can attach it directly like this:

@Attachment(value = "Screenshot", type = "image/png")
public byte[] takeScreenshot() {
    return ((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES);
}
✅ Summary
Task	Tool/Code
Define Feature	login.feature
Implement Steps	LoginSteps.java
Setup Allure	Add allure-cucumber7-jvm plugin in runner
Run Tests	mvn clean test
View Report	allure serve target/allure-results

You said:
why we are integrating allure with maven using allure-maven and why we are using allure-cucumber-7-jvm for cucumber intgration


ChatGPT said:
Great question! Let's break it down clearly:

✅ Why We Integrate Allure with Maven using allure-maven Plugin
✳️ Purpose of allure-maven Plugin:
The allure-maven plugin is used to:

Generate Allure-compatible reports from test result files.
Convert the raw JSON/XML results (in target/allure-results/) into a beautiful HTML report (target/site/allure-maven-plugin).
Simplify report generation using Maven lifecycle (i.e., mvn allure:serve or mvn allure:report).

🔧 Maven Integration Benefits:
One-liner command: mvn clean test allure:serve
Easy to plug into CI/CD pipelines (e.g., Jenkins, GitLab)
Supports cross-platform automation (Windows/Linux/Mac)
Eliminates manual report generation via CLI
Keeps your automation stack all-in-one inside Maven

✅ Why We Use allure-cucumber7-jvm for Cucumber Integration
✳️ Purpose of allure-cucumber7-jvm:
This dependency provides the glue layer between:

Cucumber 7.x framework (which runs your feature files and steps)
Allure report engine (which consumes test steps/events)
It automatically listens to your Cucumber scenarios, captures:
Scenario name, step name, and status (PASS/FAIL)
Annotations (@Step, @Attachment)
Test metadata like @Feature, @Severity, etc.
Without this dependency, Allure won’t recognize or understand Cucumber's format — and no report will be generated.

✅ Summary Table
Integration	Why It’s Needed
allure-maven plugin	To generate and serve the Allure HTML report via Maven commands
allure-cucumber7-jvm dependency	To connect Cucumber (v7+) test execution with Allure report engine (step-wise, feature-level tracking)

🧠 Pro Tip:
If you’re using JUnit/TestNG without Cucumber, you would use:
allure-junit5, allure-testng, etc.
bookatrIf you're using Cucumber 6, then you'd use allure-cucumber6-jvm.

