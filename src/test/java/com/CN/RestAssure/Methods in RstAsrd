iana.org
-- All kind of tests with request Parameters- Mandatory and optional.
-- Request URL
-- Request valid formats- json,xml,plain text etc
-- Request headers- Authentication and if there is some parameters passed in headers.
-- Response format and validation
-- Response error codes- 2x for valid, 4x for unauthorized access, 5x server errors etc.
-- If API calls other API as response then test that.

For effective interaction between clients (application) and servers (computer),
there must be an efficient transfer of data. This is where HTTP comes in handy.
It is designed in a way that allows information to be sent in a format that can be understood by
both the client and the server. HTTP works as a request-response protocol between a browser/
application and a computer that hosts a website. Calling or submitting various HTTP requests can be done
 using multiple methods. The POST request is one of them.

Those method which didnt update the resource at server end if the hit fails  is called SAFE.

IDEMPOTENT --> No matter how many times the http request hit it will not impact the intended
               effect on server.
Cacheable --> the server can cache the actual response not every hit you have to go on server
              and fetch the resources

GET= the method is used to fetch the data from the server and the data comes as a resource.
HEAD == it will transfer the headline and status code but not response payload benefits id to
                                          check the availabilty of api without hitting the get
POST is not idempotent
POST VS PATCH
PUT == it can replace the resource if resource does not then it will create a new one, put is idempotent
When a client needs to replace an existing Resource entirely, they can use PUT.
When they're doing a partial update, they can use HTTP PATCH.
200 if existed and replace
201 if new created
204 no content found
delete removes all kind of resource from target
patch will change the only part which you want to update

Mock server
https://0e3609a0-8dfd-49d7-9d79-1990925536de.mock.pstmn.io


