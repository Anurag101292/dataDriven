
FOLLOWING_SIBLING
//div[@class='canvas- graph']//a[@href='/accounting.html'][i[@class='icon-usd']]/following-sibling::h4"
ANCESTOR SIBLING
//div[.//a[text()='SELENIUM']]/ancestor::div[@class='rt-grid-2 rt-omega']/following-sibling::div
FOLLOWING
Xpath=//*[@type='text']//following::input
PRECEDING
Preceding: This function will return the preceding element of the particular element.
Xpath= //*[@type='submit']//preceding::input

EXPLICIT WAIT
WebDriverWait wait=new WebDriverWait(driver, 20);
The following are the Expected Conditions that can be used in Selenium Explicit Wait
alertIsPresent() elementSelectionStateToBe() elementToBeClickable() elementToBeSelected()
frameToBeAvaliableAndSwitchToIt() invisibilityOfTheElementLocated() invisibilityOfElementWithText()
presenceOfAllElementsLocatedBy() presenceOfElementLocated() textToBePresentInElement()
textToBePresentInElementLocated() textToBePresentInElementValue()
titleIs() titleContains() visibilityOf() visibilityOfAllElements() visibilityOfAllElementsLocatedBy() visibilityOfElementLocated()

FLUENT WAIT
Wait wait = new FluentWait(WebDriver reference)
.withTimeout(Duration.ofSeconds(SECONDS))
.pollingEvery(Duration.ofSeconds(SECONDS))
.ignoring(Exception.class);

Question: – How to check webpage is fully loaded or not using Selenium?
Answer: – This situation can be solved by using JavaScript executors.
IWait wait = new OpenQA.Selenium.Support.UI.WebDriverWait(driver, TimeSpan.FromSeconds(30.00));
wait.Until(driver1 => ((IJavaScriptExecutor)driver).ExecuteScript(“return document.readyState”).
Equals(“complete”));

All Interfaces used in selenum

HasCapabilities, HasInputDevices, Interactive, JavascriptExecutor, PrintsPage,
 SearchContext, TakesScreenshot, HasVirtualAuthenticator, WebDriver

 https://naveenautomationlabs.com/realtimeinterviewquestions/