TELL ME ABOUT YOURSELF?
Currently I am working as a senior sdet in JPmorgan chase in investment banking Line of business 
my team manages product named as transact which provide solutions for Cross Browser exposure and payments through 
FX hedging settlement and related regulatory control checks.

Currently I am working in TOTAL SYSTEM SERVICE this the part of Global Payments corporation ,

i have around 6.5years of experience in IT which is  in QA and testing  majorly.

Before this I had worked in Healthkart this is product based organisation which provide
food suppliments to their customers , may be you have not heard about healthkart but you must heard about muscleblaze
so there i worked in backend team involved majorly helped their to validate the  automatedmsupply chain managemant of company

 For the technology side
  I have used selenium with java for UI automation ,
 and in backend api testing  I have used Rest assured with java and postman and wrt to other activities like devops
 I am also having some exposure in Jenkins for build and deployment activities and maven ,
 github repositories and git command, docker for monitoring tool I have used SPLUNK AND DYNATRACE
 other then that we are using JIRA ,Confluence for project management.
 along with that i have a exposure to setup infrastructure end to end either test case on staging environment.

Our Selenium tests were taking too long to execute and were failing intermittently due to dynamic waits and browser driver 
dependencies. With Playwright, we achieved a 30–50% speed improvement, better stability in headless runs, and cleaner,
more maintainable code.”

 Why you want change ?
 * you outgrew your role and you were underutilised,

 * As a responsible professional, I try to strike a healthy balance between office work and personal life.
 I have always desired to work for a company that values the time of its
 employees and allows flexibility in work hours to help them meet their professional commitments efficiently.

I feel like I am ready to take on more responsibility,
 I believe I have progressed as far as I can in my current role .
I need a change of environment to motivate me. I want to develop a new skill that isn't required in my current job.

What are your roles and responsibility ?
Here I worked as a sdet
 Test estimations--Hardware and software resources ,,preparing the test confluence docs according to user requirements ,
   what are the checkmarx which we need to check on PROD post deployemnt validations  together with the code
  what are the application properties which we need to send on production together with code deployment

 writing the testcases , reviewing test cases ,preparing test plan,executing test cases,reporting defects
 and developing automation scripts ,designing and implementing automation frameworks
 does we need to automate the testcases are we able to
                                     automate those scenarios within sprint
  to check monitoring tools alerts need to check what we send in past sprint in prod does those
   functionalities working fine or not also connect with my juniors if they are facing any issues in testing

   Selecting or Identifying Area/TestCAses fro Automation
   Designing and implementing test Automation Strategy
   Creating Automation Test Plan and getting approval
   Involvement in Product env setup
   Creating, organizing and managing TestAutomation Resources
   Creating Enhancing debugging and Running test Cases
   Organizing , Monitoring defect management process
   Handling Changes and conducting Regression Testing
   Coordinating test team members and development team in order to resolve issue
   interacting with clientside people to solve issues and update status


What are your current project on which you are working ?
  //In recent Project currently we are migrating our old services into new in DB side we are migrating my sql
  // in cassandra and for queuing system we are using kafka now ,
  // SO we are closely working in agile based system using SCRUM approach ,
    I also involved working  with different stakeholders ,QA team dev team and product owner as well
    we have 2 week sprint in which I majorly involved in testing activities like
     understanding requirements,

   What are entry and exit criteria of testing in your current project ?

   Entry criteria you can say that before starting the testing our requirement should be clear as per BRS
                  we have proper setup of environment before starting testing
                  we have proper confluence document of application architecture and changes
                  Analyzing the test approaches in which we are able to
                           validate the functionality as soon as possible
                           to define how much fault we can tolerate
                           what is the accptance bandwith of request and response in production
                           what are the service level agreements for the project
   Exit Criteria identify all the transactions in modules
                 Ensuring all critical testcases are passed
                 Achiving complete functional coverage
                 identifying and fixing all high priority defects, fixing all show stoppers defects
                 preparing requirement tracibilty matrix
           preparing the test summary report to check every stage of test pyramid that we have complete
           testcoverage of unit testing,integration testing ,System testing and acceptance testing
                 regression reports
                 feed backs in every stage of testing from product owner

Analytical
    Focusing testing on the most critical functionality (risk based)
Model-based
    Stochastic or Monkey testing using random or statistical information (tool).Operational profiles
Methodical Testing approaches
    Failure based (error guessing and fault attack) ,Experience-based
    check-list based and quality characteristic-based

how you can segregate that which testcase need to be automated<TEST AUTOMATION PLANNING > ?

A test case should be automated if:
The task is going to be repeated.
It’s going to save time.
The requirements, the test, or the task are low risk, stable, and unlikely to change often.
The test is subject to human error.
The test is time consuming.
The test has significant downtime between steps.


sprint lifecycle ?
TEST COVERAGE FOR UNIT TEST COVERAGE ?

TEST PLANNING ?

 Thumbrule to design Automation Framework
         "NEVER HARD CODE
         KEEP THE RIGHT THINGS IN RIGHT PLACE
         FOLLOW THE REUSE CULTURE
         MAKE THE FRAMEWORK EASY FOR MANUAL TESTERS OR OTHERS TO CONTRIBUTE
         MAKE THE FRAMEWORK ROBUST

         Scalability , flowcontrol rate of producing and rate of consuming ,cost


     Unit tests form the base of the testing pyramid. They test individual components or functionalities to
     validate that it works as expected in isolated conditions. It is important to run a number of scenarios
     in unit tests – happy path, error handling, etc.
     Since this is the largest subset, the unit test suite must be written to run as quickly as possible.
      Keep in mind that the number of unit tests will increase as more features are added.
      This test suite needs to be run every time a new feature is added. Consequently,
      developers receive immediate feedback on whether individual features are working as they are meant to.
         Needless to say, a fast-running unit test suite encourages devs to run it as often as possible.
          A good way to build a robust unit test suite is to practice test-driven development (TDD).
           Since TDD requires a test to be written before any code, the code ends up being simpler,
           clearer and bug-free.


 Level 2 – Integration Tests
 Unit tests verify small pieces of a codebase. However, in order to test how this code interacts with
  other code (that form the entire software), integration tests need to be run. Essentially,
  these are tests that validate the interaction of a piece of code with external components.
  These components can range from databases, external services (APIs) and the like.

 Integration tests are the second layer of the test automation pyramid.
  This means that it should not be run as frequently as unit tests.
   Fundamentally, they test how a feature communicates with external dependencies.
    Whether it is a call to a database or web service, the software needs to communicate effectively and
     retrieve the right information to function as expected.

 Remember that since integration tests involve interaction with external services, they will run slower than unit tests. 
 They also require a preproduction environment in which to run.

 Level 3 – End-to-End Tests
 At the top of the pyramid are the end-to-end tests. These ensure that the entire application is functioning as
  required. End-to-end tests do exactly what the name suggests: test that the application is working flawlessly
   from start to finish.

 When running these tests, it is important to imagine the user’s perspective. How would an actual user interact
 with the app? How can tests be written to replicate that interaction?

 End-to-end tests are at the top of the testing pyramid because they usually take the longest to run.
 They can also be fragile since they have to test a large variety of user scenarios.
  Like integration tests, these tests may also require the app to communicate with external dependencies,
  thus adding to possible bottlenecks in completion.



