1. so first check the release version of particular application that from which release
      this issue occurs
2. to check all the related application by log application either splunk or dynatrace and create an
      action item for RCA  in jira and check whether
    we have alerts for that particular issue.
3. Now to check that it is network or environment  related issue or application related issue
4. so if application related issue then try to reproduce this in lower environments
5. so after reproducing the bugs  we have to check that how this goes into upper environment ,
   so check the test coverage on unit level or functional level or system level
WHY SHOULD WE HIRE YOU ???
I am 3 in 1 pck together with the testing I also work as a moderator in my team ,
     I have contributed in devops related task, from the development point of view I have completed
     the Project from development end where we dont need manual intervention to check post deployment
      activities

      Thumbrule to design Automation Framework
      "NEVER HARD CODE
      KEEP THE RIGHT THINGS IN RIGHT PLACE
      FOLLOW THE REUSE CULTURE
      MAKE THE FRAMEWORK EASY FOR MANUAL TESTERS OR OTHERS TO CONTRIBUTE
      MAKE THE FRAMEWORK ROBUST"

      Question: – 7 Soft skills every ‘QA Tester’ needs:
      Answer:
      Know how to ask the right questions, and when to ask them
      Know how to listen
      Know how to focus on what business stakeholders care about … and forget the rest
      Know how to play well with others: Take a developer to lunch
      Know how to deal with bullies
      Know how to manage your time effectively
      Know how to trust your judgment — and your intuition

      Question: – What is the most challenging situation you have had in your Testing experience?

      Answer: – As you might have guessed, it depends on each tester’s experience.
      The challenge can be technical, process-oriented, people’s related, domain specific OR
      anything within your Testing experience. For me,

      Testing a technically-challenging application such as social-connected applications,
       application involving multiple third-party interfaces, cloud-big data-IoT-Analytics-etc. applications.

      Maintaining a balance between design/execution efficiency and defect detection.
      Improving the Test coverage. Sticking to agile principles.

      Resources on unplanned leaves, some even abscond. Estimation gone wrong,
       requiring weekend & extended working hours. Rating discussions with unhappy employees.

      A team of fresher’s with limited domain knowledge. Planning for knowledge transfer sessions.
       The thumb rule – be realistic & tell your genuine challenges!

