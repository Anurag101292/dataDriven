The default Maven lifecycle consists of 8 major steps or phases for compiling,
testing, building and installing a given Java project as specified below:

1.Validate: This step validates if the project structure is correct. For example â€“
             It checks if all the dependencies have been downloaded and are available in the local repository.
2.Compile: It compiles the source code, converts the .java files to .class and stores the classes
             in target/classes folder.
3.Test: It runs unit tests for the project .
4.Package: This step packages the compiled code in distributable format like JAR or WAR.
5.Integration test: It runs the integration tests for the project.
6.Verify: This step runs checks to verify that the project is valid and meets the quality standards.
7.Install: This step installs the packaged code to the local Maven repository.
8.Deploy: It copies the packaged code to the remote repository for sharing it with other developers.


Maven Commands:
mvn clean: Cleans the project and removes all files generated by the previous build.
mvn compile: Compiles source code of the project.
mvn test-compile: Compiles the test source code.
mvn test: Runs tests for the project.
mvn package: Creates JAR or WAR file for the project to convert it into a distributable format.
mvn install: Deploys the packaged JAR/ WAR file to the local repository.
mvn deploy: Copies the packaged JAR/ WAR file to the remote repository after compiling,
            running tests and building the project.